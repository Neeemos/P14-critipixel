name: Symfony CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    # 1) On expose les secrets en tant qu'env du job
    env:
      DB_USER: ${{ secrets.DB_USER }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}

    services:
      postgres:
        image: postgres:15
        env:
          # 2) On référence ici les variables job-env
          POSTGRES_USER: $DB_USER
          POSTGRES_PASSWORD: $DB_PASSWORD
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP with extensions
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: pdo_pgsql
          tools: symfony, composer
          coverage: none

      - name: Validate composer.json and composer.lock
        run: composer validate

      - name: Cache Composer packages
        uses: actions/cache@v3
        with:
          path: vendor
          key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-

      - name: Install Composer dependencies
        run: composer install --prefer-dist --no-progress

      - name: Install PostgreSQL client
        run: sudo apt-get update && sudo apt-get install -y postgresql-client

      - name: Wait for PostgreSQL to be ready
        run: |
          for i in {1..15}; do
            pg_isready -h localhost -p 5432 -U $DB_USER && break
            echo "⏳ Waiting for PostgreSQL..."
            sleep 2
          done

      - name: Generate random .env.test file & Create test DB
        env:
          # Passe le mot de passe à psql
          PGPASSWORD: $DB_PASSWORD
        run: |
          DB_NAME="testdb_$RANDOM"
          APP_SECRET="$(openssl rand -hex 16)"

          # Fichier .env.test
          {
            echo "KERNEL_CLASS='App\\Kernel'"
            echo "APP_SECRET=$APP_SECRET"
            echo "SYMFONY_DEPRECATIONS_HELPER=999999"
            echo "PANTHER_APP_ENV=panther"
            echo "PANTHER_ERROR_SCREENSHOT_DIR=./var/error-screenshots"
            echo "DATABASE_URL=postgresql://$DB_USER:$DB_PASSWORD@localhost:5432/$DB_NAME"
          } > .env.test

          # Création de la BDD
          echo "Creating PostgreSQL test database: $DB_NAME"
          psql -h localhost -U $DB_USER -c "CREATE DATABASE \"$DB_NAME\";"

      - name: Build Sass css
        run: symfony console sass:build || true

      - name: Run tests
        run: composer run test

      - name: Run PHPStan static analysis
        run: php vendor/bin/phpstan analyse -l 6 src tests
